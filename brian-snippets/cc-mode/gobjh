# -*- mode: snippet -*-
#name: gobjh
#key: gobjh
# --
#ifndef __${1:$(upcase yas/text)}_${2:$(upcase (brian-un-camelcase-string yas/text))}_H__
#define __${1:$(upcase yas/text)}_${2:$(upcase (brian-un-camelcase-string yas/text))}_H__

#include <glib-object.h>

G_BEGIN_DECLS

/*
 * Type macros.
 */
#define ${1:$(upcase yas/text)}_TYPE_${2:$(upcase (brian-un-camelcase-string yas/text))}                  (${1:$(downcase yas/text)}_${2:$(downcase (brian-un-camelcase-string yas/text))}_get_type ())
#define ${1:$(upcase yas/text)}_${2:$(upcase (brian-un-camelcase-string yas/text))}(obj)                  (G_TYPE_CHECK_INSTANCE_CAST ((obj), ${1:$(upcase yas/text)}_TYPE_${2:$(upcase (brian-un-camelcase-string yas/text))}, $1$2))
#define ${1:$(upcase yas/text)}_IS_${2:$(upcase (brian-un-camelcase-string yas/text))}(obj)               (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ${1:$(upcase yas/text)}_TYPE_${2:$(upcase (brian-un-camelcase-string yas/text))}))
#define ${1:$(upcase yas/text)}_${2:$(upcase (brian-un-camelcase-string yas/text))}_CLASS(klass)          (G_TYPE_CHECK_CLASS_CAST ((klass), ${1:$(upcase yas/text)}_TYPE_${2:$(upcase (brian-un-camelcase-string yas/text))}, $1$2Class))
#define ${1:$(upcase yas/text)}_IS_${2:$(upcase (brian-un-camelcase-string yas/text))}_CLASS(klass)       (G_TYPE_CHECK_CLASS_TYPE ((klass), ${1:$(upcase yas/text)}_TYPE_${2:$(upcase (brian-un-camelcase-string yas/text))}))
#define ${1:$(upcase yas/text)}_${2:$(upcase (brian-un-camelcase-string yas/text))}_GET_CLASS(obj)        (G_TYPE_INSTANCE_GET_CLASS ((obj), ${1:$(upcase yas/text)}_TYPE_${2:$(upcase (brian-un-camelcase-string yas/text))}, $1$2Class))

typedef struct $1$2_	        ${1:Prefix}${2:Name};
typedef struct $1$2Class_	$1$2Class;

struct $1$2_
{
  ${3:GObject} parent_instance;

  /* instance members */
  $0
};

struct $1$2Class_
{
  $3Class parent_class;

  /* class members */
};

/* used by ${1:$(upcase yas/text)}_TYPE_${2:$(upcase (brian-un-camelcase-string yas/text))} */
GType ${1:$(downcase yas/text)}_${2:$(downcase (brian-un-camelcase-string yas/text))}_get_type (void);

/*
 * Method definitions.
 */
$1$2 *${1:$(downcase yas/text)}_${2:$(downcase (brian-un-camelcase-string yas/text))}_new(void);

$1$2 * ${1:$(downcase yas/text)}_${2:$(downcase (brian-un-camelcase-string yas/text))}_ref($1$2 *obj);

void ${1:$(downcase yas/text)}_${2:$(downcase (brian-un-camelcase-string yas/text))}_unref($1$2 *obj);

G_END_DECLS

#endif /* __${1:$(upcase yas/text)}_${2:$(upcase (brian-un-camelcase-string yas/text))}_H__ */
