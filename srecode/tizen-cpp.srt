set mode "c++-mode"

set priority 120

set comment_start "/*"
set comment_end " */"
set comment_prefix " *"
set comment_extra "//"

set SAMSUNGAUTHOR "Brian Fransioli <br.fransioli@samsung.com>"

set SAMSUNGCOPYRIGHT "
Copyright (c) 2000 - 2014 Samsung Electronics Co., Ltd All Rights Reserved

PROPRIETARY/CONFIDENTIAL
This software is the confidential and proprietary information of SAMSUNG
ELECTRONICS (\"Confidential Information\"). You shall not disclose such
Confidential Information and shall use it only in accordance with the terms
of the license agreement you entered into with SAMSUNG ELECTRONICS.
SAMSUNG make no representations or warranties about the suitability of the
software, either express or implied, including but not limited to the
implied warranties of merchantability, fitness for a particular purpose, or
non-infringement. SAMSUNG shall not be liable for any damages suffered by
licensee as a result of using, modifying or distributing this software or
its derivatives.
"

context tizen

template header_guard :file :blank
----
#ifndef {{FILENAME_SYMBOL:brian-srecode-filename-symbol}}
#define {{FILENAME_SYMBOL:brian-srecode-filename-symbol}}

{{^}}

#endif // {{FILENAME_SYMBOL:brian-srecode-filename-symbol}}
----

template empty :time :file :cpp
"Optional docstring."
----
{{<A:filecomment}}{{?DESCRIPTION}}{{/A}}
{{#NOTHEADER}}
{{^}}
{{/NOTHEADER}}
{{#HEADER}}
{{>:tizen:header_guard}}
{{/HEADER}}
----
bind "e"

template class :indent :blank
"Insert a C++ class.  For use by user insertion.
Override this template to change contents of a class.
Override `class-tag' to override the outer structure of the class."
----
{{<A:class-tag}}
public:
     {{>CONSTRUCTOR:classdecl:constructor-tag}}
     {{>DESTRUCTOR:classdecl:destructor-tag}}
{{^}}
private:
{{/A}}
----
bind "c"

template class-tag :indent :blank
"Insert a C++ class with the expectation of it being used by a tag inserter.
Override this to affect applications, or the outer class structure for
the user-facing template."
----
class {{?NAME}} {{#PARENTS}}{{#FIRST}}: {{/FIRST}}public {{NAME}}{{/PARENTS}}
{ {{^}}
};
----
bind ""

template filecomment :file :time
sectiondictionary "A"
----
{{comment_start}}
{{SAMSUNGCOPYRIGHT:brian-srecode-projname-replace-and-comment}}
{{comment_end}}

{{comment_start}}
{{comment_prefix}} {{FILENAME}}
{{comment_prefix}} 
{{comment_prefix}} Author: {{SAMSUNGAUTHOR}}
{{comment_end}}
----

template funcinternal :indent :blank :user :file
"Method belonging to some class, declared externally."
----
{{?TYPE}} {{#METHOD}}{{CLASSPREFIX}}{{/METHOD}}{{?NAME}}({{?ARGS}})
{{#METHOD}}{{#INITIALIZERS}}{{>B:initializers}}{{/INITIALIZERS}}{{/METHOD}}
{
{{^}}
}
----
bind ""

template function :indent :blank :user:file
""
----
{{>:tizen:doxygen-function}}
{{>:tizen:funcinternal}}
----

template memberfunc :indent :blank :file
""
sectiondictionary "METHOD"
set NAME macro "?FUNC_NAME"
set TYPE macro "?RET_VALUE"
set CLASSPREFIX macro "?FILE" "::"
----
{{>METHOD:tizen:doxygen-function}}
{{>METHOD:tizen:funcinternal}}
----
bind ""

set doxycomment_start "/**"
set doxycomment_stop " */"
set doxycomment_prefix " * "

template doxygen-function :indent :blank
----
{{doxycomment_start}}
{{doxycomment_prefix}} @name {{?NAME}} - {{?DOC}}
{{doxycomment_prefix}} {{^}}{{#ARGS}}
{{doxycomment_prefix}} @param {{?NAME}} - {{?DOC}}{{/ARGS}}
{{doxycomment_prefix}} @return {{?TYPE}}
{{doxycomment_stop}}
----

template doxygen-param
""
----
{{doxycomment_prefix}} @param {{?NAME}} - {{?DOC}}
----
